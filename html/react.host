
fnm react(name args&) export~true
    var createReactElement : js "React.createElement"
        
    name =: untick name
    
    var attrs : filter args a : isMeta a
    var childs : filter args a : not : isMeta a
    childs >> map c 
        untick c
        if(isList c)
            apply react c
        else
            c
    >>> = childs
        
    var props new!
    each attrs a : props.(one a.name) =: evalOutside 7 a.value
    apply createReactElement : append name props childs
    ;append name props childs
    
react.useRuntimeScope = true


return!


fnm react(elementType props? children&) export~true
    elementType =: untick elementType
    props =: eval props    
        
    ;*
    var eArgs list!
    each children c 
        if(isList c)
    *;

    ;*
    var eArgs children
    eArgs >> enque props
    eArgs >> enque elementType
    apply e eArgs
    *;

    apply e : append (, elementType) props children 
    ;*
    >>> var reactComponent
    reactComponent.isHostReact = true
    reactComponent
    *;

fnm react(args&) export~true
    args


fn div(args&) export~true
    var 
    e "div" null "text"