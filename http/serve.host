load
    "host/base/string.host"

var routes : list : fn(args) "404"
export routes

fn addRoute(f[Fn])
    routes >> push f
export addRoute


var setContentType : fnjs"""function(args, contentType){
    args.res.writeHeader(200, {"Content-Type": contentType});
}"""
export setContentType


var sendFile : fnjs """function(args, path, contentType){
    var fs = require('fs');
    var res = args.res
    fs.readFile(path, null, function (err,file) {
        if(err) return res.end(err);
        if(!contentType){
            path = path.toLowerCase();
            if(path.endsWith(".css")) contentType = "text/css"
            else if(path.endsWith(".jpeg")) contentType = "image/jpeg"
            else if(path.endsWith(".jpg")) contentType = "image/jpg"
            else if(path.endsWith(".png")) contentType = "image/png"
            else if(path.endsWith(".gif")) contentType = "image/gif"
        }
        if(contentType)
            args.res.writeHeader(200, {"Content-Type": contentType});
        res.end(file);
    });
    args.handled = true;
    return args;
}"""
export sendFile


fn serve (port[Int]=3000)

    fn globalHandler(args)
        ;log : add "global handler called -- " date!
        reverse routes
        >> each r
        	r args, if _: return _
        "501 - no handler accepted the request"

    serveJs globalHandler port
        log <<
            var str "server listening at: http://localhost:{port}"
            for (i 2): set str: string.replace str "{port}" port

set serve.useRuntimeScope true
export serve


