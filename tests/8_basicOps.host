
;; parse basic operators
&& === AND
|| === OR
== === _eq
!= === _ne
>= === _gte
<= === _lte
>  === _gt
<  === _lt
+  === add
-  === subtract
*  === multiply
/  === divide


;; test + - * /
+ 1 2 3 === 6
+ 1 "1" === "11"
+ "say" " " "hi" === "say hi"
- 1 2 3 === -4
* 1 2 3 === 6
/ 100 10 5 === 2

;; test things like (add 1 null) === 1
+ 1 null === 1 
+ 1 undefined === NaN

;; test &&
&& 1 1 === 1
&& 1 1 true === true
&& 1 0 === false
&& 1 "" === false
&& 1 (') === (')
&& 1 new! === new!
&& 1 0 3 === false
&& 1 2 3 === 3
&& 1 2 3 true === true
== (&& 1 2 3 4 5) true === false


;; test ||
|| 1 2 3 === 1
|| 3 2 1 === 3
|| 0 false 1 === 1
|| 0 "" false === false
|| false 0 === 0
|| 0 new! 0 === new!


; test ==
== 1 1 === true
== 1 0 === false
== 1 1 2 === false
== 1 1 1 === true
== 0 false === false
== 0 (' 0) === false
== "" false === false


; test !=
!= 1 1 === false
!= 1 0 === true
!= 0 false === true
!= 0 (' 0) === true

; test >=
>= 1 1
1 >> _gte 1 === true
1 >> >= 1 === true
>= 1 0 === true
>= 1 2 === false
>= 1 0 === true

; test <=
<= 1 2 === true
<= 1 1 === true
<= 1 0 === false

; test >
> 1 2 === false
> 1 1 === false
> 1 0 === true

; test <
< 1 2 === true
< 1 1 === false
< 1 0 === false


;; comparing null and undefined
; test that null is not greater than or less than anything
> 1 null === false
< 1 null === false
<= 1 null === false
>= 1 null === false

; test that undefined is not greater than or less than anything
> 1 undefined === false
< 1 undefined === false
<= 1 undefined === false
>= 1 undefined === false

; test that null is equal to null 
== null null === true

; test that undefined is not equal to anything
== undefined undefined === false
== null undefined === false


;; test not
not 0 === true
not 1 === false
not list! === false
not new! === false
not null === true
not undefined === true


