
;; basic operators as infix
1 && 2 === : && 1 2
0 || 1 === : || 0 1
1 == 1 === : == 1 1
1 != 1 === : != 1 1
1 >= 1 === : >= 1 1
1 <= 1 === : <= 1 1
1 > 1  === : > 1 1
1 < 1  === : < 1 1
1 + 1  === : + 1 1
1 - 1  === : - 1 1
1 * 1  === : * 1 1
1 / 1  === : / 1 1


;; test with positive if statement
if(2 >= 1)
    true
else
    false
=== true

;; test with negative if statement
if(1 >= 2)
    true
else
    false
=== false

;; test chain of infix calls with if statement
null
if (1 - 1 == 0)
    "one"   
=== "one"

;; test chain of infix calls with elif statement
null
if (1 + 1 == 0)
    "one"   
elif(1 - 1 == 0)
    "two"
else "three"
=== "two"

;; test chain of infix calls with else statement
null
if (1 + 1 == 0)
    "one"   
elif(1 - 1 == 1)
    "two"
else "three"
=== "three"
